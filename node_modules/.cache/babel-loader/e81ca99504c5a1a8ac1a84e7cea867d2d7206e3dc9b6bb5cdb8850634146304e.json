{"ast":null,"code":"import { getRangeValue, parseAlpha } from \"@tsparticles/engine\";\nimport { oklchToRgb, oklchaToRgba } from \"./utils.js\";\nexport class OklchColorManager {\n  constructor() {\n    this.key = \"oklch\";\n    this.stringPrefix = \"oklch\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      oklchColor = colorValue.oklch ?? color.value;\n    if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n      return oklchToRgb(oklchColor);\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      oklchColor = colorValue.oklch ?? color.value;\n    if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n      return oklchToRgb({\n        l: getRangeValue(oklchColor.l),\n        c: getRangeValue(oklchColor.c),\n        h: getRangeValue(oklchColor.h)\n      });\n    }\n  }\n  parseString(input) {\n    const isOklch = input.startsWith(\"oklch\");\n    if (!isOklch) {\n      return;\n    }\n    const regex = /oklch\\(\\s*(\\d+(\\.\\d+)?)%\\s+(\\d+(\\.\\d+)?)\\s+(\\d+(\\.\\d+)?)(°)?(?:\\s*\\/\\s*(0|1|0?\\.\\d+|\\d{1,3}%))?\\s*\\)/i,\n      result = regex.exec(input),\n      indexes = {\n        l: 1,\n        c: 3,\n        h: 5,\n        a: 7\n      },\n      defaultAlpha = 1;\n    return result ? oklchaToRgba({\n      a: result[indexes.a] ? parseAlpha(result[indexes.a]) : defaultAlpha,\n      c: parseFloat(result[indexes.c]),\n      h: parseFloat(result[indexes.h]),\n      l: parseFloat(result[indexes.l])\n    }) : undefined;\n  }\n}","map":{"version":3,"names":["getRangeValue","parseAlpha","oklchToRgb","oklchaToRgba","OklchColorManager","constructor","key","stringPrefix","handleColor","color","colorValue","value","oklchColor","oklch","l","undefined","c","h","handleRangeColor","parseString","input","isOklch","startsWith","regex","result","exec","indexes","a","defaultAlpha","parseFloat"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/plugin-oklch-color/browser/OklchColorManager.js"],"sourcesContent":["import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nimport { oklchToRgb, oklchaToRgba } from \"./utils.js\";\nexport class OklchColorManager {\n    constructor() {\n        this.key = \"oklch\";\n        this.stringPrefix = \"oklch\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, oklchColor = colorValue.oklch ?? color.value;\n        if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n            return oklchToRgb(oklchColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, oklchColor = colorValue.oklch ?? color.value;\n        if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n            return oklchToRgb({\n                l: getRangeValue(oklchColor.l),\n                c: getRangeValue(oklchColor.c),\n                h: getRangeValue(oklchColor.h),\n            });\n        }\n    }\n    parseString(input) {\n        const isOklch = input.startsWith(\"oklch\");\n        if (!isOklch) {\n            return;\n        }\n        const regex = /oklch\\(\\s*(\\d+(\\.\\d+)?)%\\s+(\\d+(\\.\\d+)?)\\s+(\\d+(\\.\\d+)?)(°)?(?:\\s*\\/\\s*(0|1|0?\\.\\d+|\\d{1,3}%))?\\s*\\)/i, result = regex.exec(input), indexes = {\n            l: 1,\n            c: 3,\n            h: 5,\n            a: 7,\n        }, defaultAlpha = 1;\n        return result\n            ? oklchaToRgba({\n                a: result[indexes.a] ? parseAlpha(result[indexes.a]) : defaultAlpha,\n                c: parseFloat(result[indexes.c]),\n                h: parseFloat(result[indexes.h]),\n                l: parseFloat(result[indexes.l]),\n            })\n            : undefined;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAS,qBAAqB;AAChE,SAASC,UAAU,EAAEC,YAAY,QAAQ,YAAY;AACrD,OAAO,MAAMC,iBAAiB,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,GAAG,GAAG,OAAO;IAClB,IAAI,CAACC,YAAY,GAAG,OAAO;EAC/B;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAK;MAAEC,UAAU,GAAGF,UAAU,CAACG,KAAK,IAAIJ,KAAK,CAACE,KAAK;IAC5E,IAAIC,UAAU,CAACE,CAAC,KAAKC,SAAS,IAAIH,UAAU,CAACI,CAAC,KAAKD,SAAS,IAAIH,UAAU,CAACK,CAAC,KAAKF,SAAS,EAAE;MACxF,OAAOb,UAAU,CAACU,UAAU,CAAC;IACjC;EACJ;EACAM,gBAAgBA,CAACT,KAAK,EAAE;IACpB,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAK;MAAEC,UAAU,GAAGF,UAAU,CAACG,KAAK,IAAIJ,KAAK,CAACE,KAAK;IAC5E,IAAIC,UAAU,CAACE,CAAC,KAAKC,SAAS,IAAIH,UAAU,CAACI,CAAC,KAAKD,SAAS,IAAIH,UAAU,CAACK,CAAC,KAAKF,SAAS,EAAE;MACxF,OAAOb,UAAU,CAAC;QACdY,CAAC,EAAEd,aAAa,CAACY,UAAU,CAACE,CAAC,CAAC;QAC9BE,CAAC,EAAEhB,aAAa,CAACY,UAAU,CAACI,CAAC,CAAC;QAC9BC,CAAC,EAAEjB,aAAa,CAACY,UAAU,CAACK,CAAC;MACjC,CAAC,CAAC;IACN;EACJ;EACAE,WAAWA,CAACC,KAAK,EAAE;IACf,MAAMC,OAAO,GAAGD,KAAK,CAACE,UAAU,CAAC,OAAO,CAAC;IACzC,IAAI,CAACD,OAAO,EAAE;MACV;IACJ;IACA,MAAME,KAAK,GAAG,uGAAuG;MAAEC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACL,KAAK,CAAC;MAAEM,OAAO,GAAG;QACzJZ,CAAC,EAAE,CAAC;QACJE,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJU,CAAC,EAAE;MACP,CAAC;MAAEC,YAAY,GAAG,CAAC;IACnB,OAAOJ,MAAM,GACPrB,YAAY,CAAC;MACXwB,CAAC,EAAEH,MAAM,CAACE,OAAO,CAACC,CAAC,CAAC,GAAG1B,UAAU,CAACuB,MAAM,CAACE,OAAO,CAACC,CAAC,CAAC,CAAC,GAAGC,YAAY;MACnEZ,CAAC,EAAEa,UAAU,CAACL,MAAM,CAACE,OAAO,CAACV,CAAC,CAAC,CAAC;MAChCC,CAAC,EAAEY,UAAU,CAACL,MAAM,CAACE,OAAO,CAACT,CAAC,CAAC,CAAC;MAChCH,CAAC,EAAEe,UAAU,CAACL,MAAM,CAACE,OAAO,CAACZ,CAAC,CAAC;IACnC,CAAC,CAAC,GACAC,SAAS;EACnB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}