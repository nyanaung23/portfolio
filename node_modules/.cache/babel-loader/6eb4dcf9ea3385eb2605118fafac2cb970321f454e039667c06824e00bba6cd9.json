{"ast":null,"code":"import { itemFromArray } from \"@tsparticles/engine\";\nimport { Infecter } from \"./Infecter.js\";\nconst minStage = 0;\nexport class InfectionInstance {\n  constructor(container) {\n    this._container = container;\n    this._container.infecter = new Infecter(this._container);\n  }\n  particleFillColor(particle) {\n    const options = this._container.actualOptions;\n    if (!particle.infection || !options.infection) {\n      return;\n    }\n    const infectionStage = particle.infection.stage,\n      infection = options.infection,\n      infectionStages = infection.stages;\n    return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n  }\n  particleStrokeColor(particle) {\n    return this.particleFillColor(particle);\n  }\n  particlesSetup() {\n    const options = this._container.actualOptions;\n    if (!options.infection) {\n      return;\n    }\n    for (let i = 0; i < options.infection.infections; i++) {\n      const notInfected = this._container.particles.filter(p => {\n        const infP = p;\n        if (!infP.infection) {\n          infP.infection = {};\n        }\n        return infP.infection.stage === undefined;\n      });\n      const infected = itemFromArray(notInfected);\n      this._container.infecter?.startInfection(infected, minStage);\n    }\n  }\n}","map":{"version":3,"names":["itemFromArray","Infecter","minStage","InfectionInstance","constructor","container","_container","infecter","particleFillColor","particle","options","actualOptions","infection","infectionStage","stage","infectionStages","stages","undefined","color","particleStrokeColor","particlesSetup","i","infections","notInfected","particles","filter","p","infP","infected","startInfection"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/plugin-infection/browser/InfectionInstance.js"],"sourcesContent":["import { itemFromArray } from \"@tsparticles/engine\";\nimport { Infecter } from \"./Infecter.js\";\nconst minStage = 0;\nexport class InfectionInstance {\n    constructor(container) {\n        this._container = container;\n        this._container.infecter = new Infecter(this._container);\n    }\n    particleFillColor(particle) {\n        const options = this._container.actualOptions;\n        if (!particle.infection || !options.infection) {\n            return;\n        }\n        const infectionStage = particle.infection.stage, infection = options.infection, infectionStages = infection.stages;\n        return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n    particleStrokeColor(particle) {\n        return this.particleFillColor(particle);\n    }\n    particlesSetup() {\n        const options = this._container.actualOptions;\n        if (!options.infection) {\n            return;\n        }\n        for (let i = 0; i < options.infection.infections; i++) {\n            const notInfected = this._container.particles.filter(p => {\n                const infP = p;\n                if (!infP.infection) {\n                    infP.infection = {};\n                }\n                return infP.infection.stage === undefined;\n            });\n            const infected = itemFromArray(notInfected);\n            this._container.infecter?.startInfection(infected, minStage);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,qBAAqB;AACnD,SAASC,QAAQ,QAAQ,eAAe;AACxC,MAAMC,QAAQ,GAAG,CAAC;AAClB,OAAO,MAAMC,iBAAiB,CAAC;EAC3BC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACC,UAAU,CAACC,QAAQ,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAACK,UAAU,CAAC;EAC5D;EACAE,iBAAiBA,CAACC,QAAQ,EAAE;IACxB,MAAMC,OAAO,GAAG,IAAI,CAACJ,UAAU,CAACK,aAAa;IAC7C,IAAI,CAACF,QAAQ,CAACG,SAAS,IAAI,CAACF,OAAO,CAACE,SAAS,EAAE;MAC3C;IACJ;IACA,MAAMC,cAAc,GAAGJ,QAAQ,CAACG,SAAS,CAACE,KAAK;MAAEF,SAAS,GAAGF,OAAO,CAACE,SAAS;MAAEG,eAAe,GAAGH,SAAS,CAACI,MAAM;IAClH,OAAOH,cAAc,KAAKI,SAAS,GAAGF,eAAe,CAACF,cAAc,CAAC,CAACK,KAAK,GAAGD,SAAS;EAC3F;EACAE,mBAAmBA,CAACV,QAAQ,EAAE;IAC1B,OAAO,IAAI,CAACD,iBAAiB,CAACC,QAAQ,CAAC;EAC3C;EACAW,cAAcA,CAAA,EAAG;IACb,MAAMV,OAAO,GAAG,IAAI,CAACJ,UAAU,CAACK,aAAa;IAC7C,IAAI,CAACD,OAAO,CAACE,SAAS,EAAE;MACpB;IACJ;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,OAAO,CAACE,SAAS,CAACU,UAAU,EAAED,CAAC,EAAE,EAAE;MACnD,MAAME,WAAW,GAAG,IAAI,CAACjB,UAAU,CAACkB,SAAS,CAACC,MAAM,CAACC,CAAC,IAAI;QACtD,MAAMC,IAAI,GAAGD,CAAC;QACd,IAAI,CAACC,IAAI,CAACf,SAAS,EAAE;UACjBe,IAAI,CAACf,SAAS,GAAG,CAAC,CAAC;QACvB;QACA,OAAOe,IAAI,CAACf,SAAS,CAACE,KAAK,KAAKG,SAAS;MAC7C,CAAC,CAAC;MACF,MAAMW,QAAQ,GAAG5B,aAAa,CAACuB,WAAW,CAAC;MAC3C,IAAI,CAACjB,UAAU,CAACC,QAAQ,EAAEsB,cAAc,CAACD,QAAQ,EAAE1B,QAAQ,CAAC;IAChE;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}