{"ast":null,"code":"export class ExportImageInstance {\n  constructor(container, engine) {\n    this._exportImage = async data => {\n      const element = this._container.canvas.element;\n      if (!element) {\n        return;\n      }\n      return new Promise(resolve => {\n        element.toBlob(blob => {\n          if (!blob) {\n            resolve(undefined);\n            return;\n          }\n          resolve(blob);\n        }, data.type ?? \"image/png\", data.quality);\n      });\n    };\n    this._container = container;\n    this._engine = engine;\n  }\n  async export(type, data) {\n    const res = {\n      supported: false\n    };\n    switch (type) {\n      case \"image\":\n        res.supported = true;\n        res.blob = await this._exportImage(data);\n        break;\n    }\n    return res;\n  }\n}","map":{"version":3,"names":["ExportImageInstance","constructor","container","engine","_exportImage","data","element","_container","canvas","Promise","resolve","toBlob","blob","undefined","type","quality","_engine","export","res","supported"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/plugin-export-image/browser/ExportImageInstance.js"],"sourcesContent":["export class ExportImageInstance {\n    constructor(container, engine) {\n        this._exportImage = async (data) => {\n            const element = this._container.canvas.element;\n            if (!element) {\n                return;\n            }\n            return new Promise(resolve => {\n                element.toBlob(blob => {\n                    if (!blob) {\n                        resolve(undefined);\n                        return;\n                    }\n                    resolve(blob);\n                }, data.type ?? \"image/png\", data.quality);\n            });\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async export(type, data) {\n        const res = {\n            supported: false,\n        };\n        switch (type) {\n            case \"image\":\n                res.supported = true;\n                res.blob = await this._exportImage(data);\n                break;\n        }\n        return res;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,CAAC;EAC7BC,WAAWA,CAACC,SAAS,EAAEC,MAAM,EAAE;IAC3B,IAAI,CAACC,YAAY,GAAG,MAAOC,IAAI,IAAK;MAChC,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAACC,MAAM,CAACF,OAAO;MAC9C,IAAI,CAACA,OAAO,EAAE;QACV;MACJ;MACA,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAI;QAC1BJ,OAAO,CAACK,MAAM,CAACC,IAAI,IAAI;UACnB,IAAI,CAACA,IAAI,EAAE;YACPF,OAAO,CAACG,SAAS,CAAC;YAClB;UACJ;UACAH,OAAO,CAACE,IAAI,CAAC;QACjB,CAAC,EAAEP,IAAI,CAACS,IAAI,IAAI,WAAW,EAAET,IAAI,CAACU,OAAO,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACD,IAAI,CAACR,UAAU,GAAGL,SAAS;IAC3B,IAAI,CAACc,OAAO,GAAGb,MAAM;EACzB;EACA,MAAMc,MAAMA,CAACH,IAAI,EAAET,IAAI,EAAE;IACrB,MAAMa,GAAG,GAAG;MACRC,SAAS,EAAE;IACf,CAAC;IACD,QAAQL,IAAI;MACR,KAAK,OAAO;QACRI,GAAG,CAACC,SAAS,GAAG,IAAI;QACpBD,GAAG,CAACN,IAAI,GAAG,MAAM,IAAI,CAACR,YAAY,CAACC,IAAI,CAAC;QACxC;IACR;IACA,OAAOa,GAAG;EACd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}