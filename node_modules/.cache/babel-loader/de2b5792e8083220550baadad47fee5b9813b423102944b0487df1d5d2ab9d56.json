{"ast":null,"code":"import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst popMode = \"pop\";\nexport class Popper extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      const container = this.container;\n      if (mode !== popMode) {\n        return;\n      }\n      const clickPos = container.interactivity.mouse.clickPosition;\n      if (!clickPos) {\n        return;\n      }\n      const poppedParticles = container.particles.quadTree.queryCircle(clickPos, container.retina.pixelRatio);\n      if (!poppedParticles.length) {\n        return;\n      }\n      for (const particle of poppedParticles) {\n        container.particles.remove(particle);\n      }\n    };\n  }\n  clear() {}\n  init() {}\n  interact() {}\n  isEnabled() {\n    return true;\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","popMode","Popper","constructor","container","handleClickMode","mode","clickPos","interactivity","mouse","clickPosition","poppedParticles","particles","quadTree","queryCircle","retina","pixelRatio","length","particle","remove","clear","init","interact","isEnabled","reset"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/interaction-external-pop/browser/Popper.js"],"sourcesContent":["import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst popMode = \"pop\";\nexport class Popper extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container;\n            if (mode !== popMode) {\n                return;\n            }\n            const clickPos = container.interactivity.mouse.clickPosition;\n            if (!clickPos) {\n                return;\n            }\n            const poppedParticles = container.particles.quadTree.queryCircle(clickPos, container.retina.pixelRatio);\n            if (!poppedParticles.length) {\n                return;\n            }\n            for (const particle of poppedParticles) {\n                container.particles.remove(particle);\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,qBAAqB;AAC5D,MAAMC,OAAO,GAAG,KAAK;AACrB,OAAO,MAAMC,MAAM,SAASF,sBAAsB,CAAC;EAC/CG,WAAWA,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIE,IAAI,KAAKL,OAAO,EAAE;QAClB;MACJ;MACA,MAAMM,QAAQ,GAAGH,SAAS,CAACI,aAAa,CAACC,KAAK,CAACC,aAAa;MAC5D,IAAI,CAACH,QAAQ,EAAE;QACX;MACJ;MACA,MAAMI,eAAe,GAAGP,SAAS,CAACQ,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACP,QAAQ,EAAEH,SAAS,CAACW,MAAM,CAACC,UAAU,CAAC;MACvG,IAAI,CAACL,eAAe,CAACM,MAAM,EAAE;QACzB;MACJ;MACA,KAAK,MAAMC,QAAQ,IAAIP,eAAe,EAAE;QACpCP,SAAS,CAACQ,SAAS,CAACO,MAAM,CAACD,QAAQ,CAAC;MACxC;IACJ,CAAC;EACL;EACAE,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG,CACP;EACAC,QAAQA,CAAA,EAAG,CACX;EACAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI;EACf;EACAC,KAAKA,CAAA,EAAG,CACR;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}