{"ast":null,"code":"import { ParticlesInteractorBase, isInArray, rangeColorToRgb } from \"@tsparticles/engine\";\nimport { drawParticleShadow, lightMode } from \"./Utils.js\";\nexport class ParticlesLighter extends ParticlesInteractorBase {\n  constructor(container, engine) {\n    super(container);\n    this._engine = engine;\n  }\n  clear() {}\n  init() {}\n  interact(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      interactivity = container.interactivity;\n    if (!options.interactivity.events.onHover.enable || interactivity.status !== \"pointermove\") {\n      return;\n    }\n    const mousePos = interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    container.canvas.draw(ctx => {\n      drawParticleShadow(container, ctx, particle, mousePos);\n    });\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      interactivity = particle.interactivity ?? container.actualOptions.interactivity,\n      mouse = container.interactivity.mouse,\n      events = interactivity.events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    const res = isInArray(lightMode, events.onHover.mode);\n    if (res && interactivity.modes.light) {\n      const shadowOptions = interactivity.modes.light.shadow;\n      particle.lightShadow = rangeColorToRgb(this._engine, shadowOptions.color);\n    }\n    return res;\n  }\n  reset() {}\n}","map":{"version":3,"names":["ParticlesInteractorBase","isInArray","rangeColorToRgb","drawParticleShadow","lightMode","ParticlesLighter","constructor","container","engine","_engine","clear","init","interact","particle","options","actualOptions","interactivity","events","onHover","enable","status","mousePos","mouse","position","canvas","draw","ctx","isEnabled","res","mode","modes","light","shadowOptions","shadow","lightShadow","color","reset"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/interaction-light/browser/ParticlesLighter.js"],"sourcesContent":["import { ParticlesInteractorBase, isInArray, rangeColorToRgb } from \"@tsparticles/engine\";\nimport { drawParticleShadow, lightMode } from \"./Utils.js\";\nexport class ParticlesLighter extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(particle) {\n        const container = this.container, options = container.actualOptions, interactivity = container.interactivity;\n        if (!options.interactivity.events.onHover.enable || interactivity.status !== \"pointermove\") {\n            return;\n        }\n        const mousePos = interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        container.canvas.draw(ctx => {\n            drawParticleShadow(container, ctx, particle, mousePos);\n        });\n    }\n    isEnabled(particle) {\n        const container = this.container, interactivity = particle.interactivity ?? container.actualOptions.interactivity, mouse = container.interactivity.mouse, events = interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const res = isInArray(lightMode, events.onHover.mode);\n        if (res && interactivity.modes.light) {\n            const shadowOptions = interactivity.modes.light.shadow;\n            particle.lightShadow = rangeColorToRgb(this._engine, shadowOptions.color);\n        }\n        return res;\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,uBAAuB,EAAEC,SAAS,EAAEC,eAAe,QAAQ,qBAAqB;AACzF,SAASC,kBAAkB,EAAEC,SAAS,QAAQ,YAAY;AAC1D,OAAO,MAAMC,gBAAgB,SAASL,uBAAuB,CAAC;EAC1DM,WAAWA,CAACC,SAAS,EAAEC,MAAM,EAAE;IAC3B,KAAK,CAACD,SAAS,CAAC;IAChB,IAAI,CAACE,OAAO,GAAGD,MAAM;EACzB;EACAE,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG,CACP;EACAC,QAAQA,CAACC,QAAQ,EAAE;IACf,MAAMN,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEO,OAAO,GAAGP,SAAS,CAACQ,aAAa;MAAEC,aAAa,GAAGT,SAAS,CAACS,aAAa;IAC5G,IAAI,CAACF,OAAO,CAACE,aAAa,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,IAAIH,aAAa,CAACI,MAAM,KAAK,aAAa,EAAE;MACxF;IACJ;IACA,MAAMC,QAAQ,GAAGL,aAAa,CAACM,KAAK,CAACC,QAAQ;IAC7C,IAAI,CAACF,QAAQ,EAAE;MACX;IACJ;IACAd,SAAS,CAACiB,MAAM,CAACC,IAAI,CAACC,GAAG,IAAI;MACzBvB,kBAAkB,CAACI,SAAS,EAAEmB,GAAG,EAAEb,QAAQ,EAAEQ,QAAQ,CAAC;IAC1D,CAAC,CAAC;EACN;EACAM,SAASA,CAACd,QAAQ,EAAE;IAChB,MAAMN,SAAS,GAAG,IAAI,CAACA,SAAS;MAAES,aAAa,GAAGH,QAAQ,CAACG,aAAa,IAAIT,SAAS,CAACQ,aAAa,CAACC,aAAa;MAAEM,KAAK,GAAGf,SAAS,CAACS,aAAa,CAACM,KAAK;MAAEL,MAAM,GAAGD,aAAa,CAACC,MAAM;IACvL,IAAI,EAAEA,MAAM,CAACC,OAAO,CAACC,MAAM,IAAIG,KAAK,CAACC,QAAQ,CAAC,EAAE;MAC5C,OAAO,KAAK;IAChB;IACA,MAAMK,GAAG,GAAG3B,SAAS,CAACG,SAAS,EAAEa,MAAM,CAACC,OAAO,CAACW,IAAI,CAAC;IACrD,IAAID,GAAG,IAAIZ,aAAa,CAACc,KAAK,CAACC,KAAK,EAAE;MAClC,MAAMC,aAAa,GAAGhB,aAAa,CAACc,KAAK,CAACC,KAAK,CAACE,MAAM;MACtDpB,QAAQ,CAACqB,WAAW,GAAGhC,eAAe,CAAC,IAAI,CAACO,OAAO,EAAEuB,aAAa,CAACG,KAAK,CAAC;IAC7E;IACA,OAAOP,GAAG;EACd;EACAQ,KAAKA,CAAA,EAAG,CACR;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}