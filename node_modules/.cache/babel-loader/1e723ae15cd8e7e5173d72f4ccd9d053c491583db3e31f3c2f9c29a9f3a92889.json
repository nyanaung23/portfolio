{"ast":null,"code":"import { addParticlesFromCanvasPixels, getCanvasImageData, getImageData, getTextData } from \"./utils.js\";\nimport { isNull } from \"@tsparticles/engine\";\nexport class CanvasMaskInstance {\n  constructor(container) {\n    this._container = container;\n  }\n  async init() {\n    const container = this._container,\n      options = container.actualOptions.canvasMask;\n    if (!options?.enable) {\n      return;\n    }\n    let pixelData = {\n      pixels: [],\n      height: 0,\n      width: 0\n    };\n    const offset = options.pixels.offset;\n    if (options.image) {\n      const url = options.image.src;\n      if (!url) {\n        return;\n      }\n      pixelData = await getImageData(url, offset);\n    } else if (options.text) {\n      const textOptions = options.text;\n      const data = getTextData(textOptions, offset);\n      if (isNull(data)) {\n        return;\n      }\n      pixelData = data;\n    } else if (options.element ?? options.selector) {\n      const canvas = options.element ?? (options.selector && document.querySelector(options.selector));\n      if (!canvas) {\n        return;\n      }\n      const context = canvas.getContext(\"2d\");\n      if (!context) {\n        return;\n      }\n      pixelData = getCanvasImageData(context, canvas, offset);\n    }\n    addParticlesFromCanvasPixels(container, pixelData, options.position, options.scale, options.override, options.pixels.filter);\n  }\n}","map":{"version":3,"names":["addParticlesFromCanvasPixels","getCanvasImageData","getImageData","getTextData","isNull","CanvasMaskInstance","constructor","container","_container","init","options","actualOptions","canvasMask","enable","pixelData","pixels","height","width","offset","image","url","src","text","textOptions","data","element","selector","canvas","document","querySelector","context","getContext","position","scale","override","filter"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/plugin-canvas-mask/browser/CanvasMaskInstance.js"],"sourcesContent":["import { addParticlesFromCanvasPixels, getCanvasImageData, getImageData, getTextData, } from \"./utils.js\";\nimport { isNull } from \"@tsparticles/engine\";\nexport class CanvasMaskInstance {\n    constructor(container) {\n        this._container = container;\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions.canvasMask;\n        if (!options?.enable) {\n            return;\n        }\n        let pixelData = {\n            pixels: [],\n            height: 0,\n            width: 0,\n        };\n        const offset = options.pixels.offset;\n        if (options.image) {\n            const url = options.image.src;\n            if (!url) {\n                return;\n            }\n            pixelData = await getImageData(url, offset);\n        }\n        else if (options.text) {\n            const textOptions = options.text;\n            const data = getTextData(textOptions, offset);\n            if (isNull(data)) {\n                return;\n            }\n            pixelData = data;\n        }\n        else if (options.element ?? options.selector) {\n            const canvas = options.element ?? (options.selector && document.querySelector(options.selector));\n            if (!canvas) {\n                return;\n            }\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            pixelData = getCanvasImageData(context, canvas, offset);\n        }\n        addParticlesFromCanvasPixels(container, pixelData, options.position, options.scale, options.override, options.pixels.filter);\n    }\n}\n"],"mappings":"AAAA,SAASA,4BAA4B,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,WAAW,QAAS,YAAY;AACzG,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,MAAMC,kBAAkB,CAAC;EAC5BC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,UAAU,GAAGD,SAAS;EAC/B;EACA,MAAME,IAAIA,CAAA,EAAG;IACT,MAAMF,SAAS,GAAG,IAAI,CAACC,UAAU;MAAEE,OAAO,GAAGH,SAAS,CAACI,aAAa,CAACC,UAAU;IAC/E,IAAI,CAACF,OAAO,EAAEG,MAAM,EAAE;MAClB;IACJ;IACA,IAAIC,SAAS,GAAG;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACX,CAAC;IACD,MAAMC,MAAM,GAAGR,OAAO,CAACK,MAAM,CAACG,MAAM;IACpC,IAAIR,OAAO,CAACS,KAAK,EAAE;MACf,MAAMC,GAAG,GAAGV,OAAO,CAACS,KAAK,CAACE,GAAG;MAC7B,IAAI,CAACD,GAAG,EAAE;QACN;MACJ;MACAN,SAAS,GAAG,MAAMZ,YAAY,CAACkB,GAAG,EAAEF,MAAM,CAAC;IAC/C,CAAC,MACI,IAAIR,OAAO,CAACY,IAAI,EAAE;MACnB,MAAMC,WAAW,GAAGb,OAAO,CAACY,IAAI;MAChC,MAAME,IAAI,GAAGrB,WAAW,CAACoB,WAAW,EAAEL,MAAM,CAAC;MAC7C,IAAId,MAAM,CAACoB,IAAI,CAAC,EAAE;QACd;MACJ;MACAV,SAAS,GAAGU,IAAI;IACpB,CAAC,MACI,IAAId,OAAO,CAACe,OAAO,IAAIf,OAAO,CAACgB,QAAQ,EAAE;MAC1C,MAAMC,MAAM,GAAGjB,OAAO,CAACe,OAAO,KAAKf,OAAO,CAACgB,QAAQ,IAAIE,QAAQ,CAACC,aAAa,CAACnB,OAAO,CAACgB,QAAQ,CAAC,CAAC;MAChG,IAAI,CAACC,MAAM,EAAE;QACT;MACJ;MACA,MAAMG,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACvC,IAAI,CAACD,OAAO,EAAE;QACV;MACJ;MACAhB,SAAS,GAAGb,kBAAkB,CAAC6B,OAAO,EAAEH,MAAM,EAAET,MAAM,CAAC;IAC3D;IACAlB,4BAA4B,CAACO,SAAS,EAAEO,SAAS,EAAEJ,OAAO,CAACsB,QAAQ,EAAEtB,OAAO,CAACuB,KAAK,EAAEvB,OAAO,CAACwB,QAAQ,EAAExB,OAAO,CAACK,MAAM,CAACoB,MAAM,CAAC;EAChI;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}