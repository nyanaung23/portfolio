{"ast":null,"code":"import { Vector, deepExtend, getRandom } from \"@tsparticles/engine\";\nimport { SimplexNoise } from \"@tsparticles/simplex-noise\";\nconst defaultOptions = {\n    speed: 0.2,\n    step: 250\n  },\n  double = 2;\nexport class CurlNoiseGenerator {\n  constructor() {\n    const simplex = new SimplexNoise();\n    this._simplex = simplex.noise2d;\n    this.options = deepExtend({}, defaultOptions);\n  }\n  generate(particle) {\n    const pos = particle.getPosition(),\n      {\n        speed,\n        step\n      } = this.options,\n      x = pos.x / step,\n      y = pos.y / step,\n      eps = 0.001,\n      n1a = this._simplex.noise(x, y + eps),\n      n2a = this._simplex.noise(x, y - eps),\n      a = (n1a - n2a) / (double * eps),\n      n1b = this._simplex.noise(x + eps, y),\n      n2b = this._simplex.noise(x - eps, y),\n      b = (n1b - n2b) / (double * eps);\n    particle.velocity.x = 0;\n    particle.velocity.y = 0;\n    return Vector.create(speed * a, speed * -b);\n  }\n  init(container) {\n    const sourceOptions = container.actualOptions.particles.move.path.options;\n    this.options.seed = sourceOptions?.seed;\n    this.options.speed = (sourceOptions?.speed ?? defaultOptions.speed) * container.retina.pixelRatio;\n    this.options.step = sourceOptions?.step ?? defaultOptions.step;\n    this._simplex.seed(this.options.seed ?? getRandom());\n  }\n  reset() {}\n  update() {}\n}","map":{"version":3,"names":["Vector","deepExtend","getRandom","SimplexNoise","defaultOptions","speed","step","double","CurlNoiseGenerator","constructor","simplex","_simplex","noise2d","options","generate","particle","pos","getPosition","x","y","eps","n1a","noise","n2a","a","n1b","n2b","b","velocity","create","init","container","sourceOptions","actualOptions","particles","move","path","seed","retina","pixelRatio","reset","update"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/path-curl-noise/browser/CurlNoiseGenerator.js"],"sourcesContent":["import { Vector, deepExtend, getRandom, } from \"@tsparticles/engine\";\nimport { SimplexNoise } from \"@tsparticles/simplex-noise\";\nconst defaultOptions = {\n    speed: 0.2,\n    step: 250,\n}, double = 2;\nexport class CurlNoiseGenerator {\n    constructor() {\n        const simplex = new SimplexNoise();\n        this._simplex = simplex.noise2d;\n        this.options = deepExtend({}, defaultOptions);\n    }\n    generate(particle) {\n        const pos = particle.getPosition(), { speed, step } = this.options, x = pos.x / step, y = pos.y / step, eps = 0.001, n1a = this._simplex.noise(x, y + eps), n2a = this._simplex.noise(x, y - eps), a = (n1a - n2a) / (double * eps), n1b = this._simplex.noise(x + eps, y), n2b = this._simplex.noise(x - eps, y), b = (n1b - n2b) / (double * eps);\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        return Vector.create(speed * a, speed * -b);\n    }\n    init(container) {\n        const sourceOptions = container.actualOptions.particles.move.path.options;\n        this.options.seed = sourceOptions?.seed;\n        this.options.speed =\n            (sourceOptions?.speed ?? defaultOptions.speed) * container.retina.pixelRatio;\n        this.options.step = sourceOptions?.step ?? defaultOptions.step;\n        this._simplex.seed(this.options.seed ?? getRandom());\n    }\n    reset() {\n    }\n    update() {\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAS,qBAAqB;AACpE,SAASC,YAAY,QAAQ,4BAA4B;AACzD,MAAMC,cAAc,GAAG;IACnBC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE;EACV,CAAC;EAAEC,MAAM,GAAG,CAAC;AACb,OAAO,MAAMC,kBAAkB,CAAC;EAC5BC,WAAWA,CAAA,EAAG;IACV,MAAMC,OAAO,GAAG,IAAIP,YAAY,CAAC,CAAC;IAClC,IAAI,CAACQ,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,OAAO,GAAGZ,UAAU,CAAC,CAAC,CAAC,EAAEG,cAAc,CAAC;EACjD;EACAU,QAAQA,CAACC,QAAQ,EAAE;IACf,MAAMC,GAAG,GAAGD,QAAQ,CAACE,WAAW,CAAC,CAAC;MAAE;QAAEZ,KAAK;QAAEC;MAAK,CAAC,GAAG,IAAI,CAACO,OAAO;MAAEK,CAAC,GAAGF,GAAG,CAACE,CAAC,GAAGZ,IAAI;MAAEa,CAAC,GAAGH,GAAG,CAACG,CAAC,GAAGb,IAAI;MAAEc,GAAG,GAAG,KAAK;MAAEC,GAAG,GAAG,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACJ,CAAC,EAAEC,CAAC,GAAGC,GAAG,CAAC;MAAEG,GAAG,GAAG,IAAI,CAACZ,QAAQ,CAACW,KAAK,CAACJ,CAAC,EAAEC,CAAC,GAAGC,GAAG,CAAC;MAAEI,CAAC,GAAG,CAACH,GAAG,GAAGE,GAAG,KAAKhB,MAAM,GAAGa,GAAG,CAAC;MAAEK,GAAG,GAAG,IAAI,CAACd,QAAQ,CAACW,KAAK,CAACJ,CAAC,GAAGE,GAAG,EAAED,CAAC,CAAC;MAAEO,GAAG,GAAG,IAAI,CAACf,QAAQ,CAACW,KAAK,CAACJ,CAAC,GAAGE,GAAG,EAAED,CAAC,CAAC;MAAEQ,CAAC,GAAG,CAACF,GAAG,GAAGC,GAAG,KAAKnB,MAAM,GAAGa,GAAG,CAAC;IACnVL,QAAQ,CAACa,QAAQ,CAACV,CAAC,GAAG,CAAC;IACvBH,QAAQ,CAACa,QAAQ,CAACT,CAAC,GAAG,CAAC;IACvB,OAAOnB,MAAM,CAAC6B,MAAM,CAACxB,KAAK,GAAGmB,CAAC,EAAEnB,KAAK,GAAG,CAACsB,CAAC,CAAC;EAC/C;EACAG,IAAIA,CAACC,SAAS,EAAE;IACZ,MAAMC,aAAa,GAAGD,SAAS,CAACE,aAAa,CAACC,SAAS,CAACC,IAAI,CAACC,IAAI,CAACvB,OAAO;IACzE,IAAI,CAACA,OAAO,CAACwB,IAAI,GAAGL,aAAa,EAAEK,IAAI;IACvC,IAAI,CAACxB,OAAO,CAACR,KAAK,GACd,CAAC2B,aAAa,EAAE3B,KAAK,IAAID,cAAc,CAACC,KAAK,IAAI0B,SAAS,CAACO,MAAM,CAACC,UAAU;IAChF,IAAI,CAAC1B,OAAO,CAACP,IAAI,GAAG0B,aAAa,EAAE1B,IAAI,IAAIF,cAAc,CAACE,IAAI;IAC9D,IAAI,CAACK,QAAQ,CAAC0B,IAAI,CAAC,IAAI,CAACxB,OAAO,CAACwB,IAAI,IAAInC,SAAS,CAAC,CAAC,CAAC;EACxD;EACAsC,KAAKA,CAAA,EAAG,CACR;EACAC,MAAMA,CAAA,EAAG,CACT;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}