{"ast":null,"code":"import { ParticlesInteractorBase, Vector, clamp, getDistances, getRangeValue } from \"@tsparticles/engine\";\nimport { ParticlesRepulse } from \"./Options/Classes/ParticlesRepulse.js\";\nconst minDistance = 0,\n  identity = 1,\n  squareExp = 2,\n  minVelocity = 0;\nexport class Repulser extends ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {}\n  interact(p1) {\n    const container = this.container;\n    if (!p1.repulse) {\n      const repulseOpt1 = p1.options.repulse;\n      if (!repulseOpt1) {\n        return;\n      }\n      p1.repulse = {\n        distance: getRangeValue(repulseOpt1.distance) * container.retina.pixelRatio,\n        speed: getRangeValue(repulseOpt1.speed),\n        factor: getRangeValue(repulseOpt1.factor)\n      };\n    }\n    const pos1 = p1.getPosition(),\n      query = container.particles.quadTree.queryCircle(pos1, p1.repulse.distance);\n    for (const p2 of query) {\n      if (p1 === p2 || p2.destroyed) {\n        continue;\n      }\n      const pos2 = p2.getPosition(),\n        {\n          dx,\n          dy,\n          distance\n        } = getDistances(pos2, pos1),\n        velocity = p1.repulse.speed * p1.repulse.factor;\n      if (distance > minDistance) {\n        const repulseFactor = clamp((identity - Math.pow(distance / p1.repulse.distance, squareExp)) * velocity, minVelocity, velocity),\n          normVec = Vector.create(dx / distance * repulseFactor, dy / distance * repulseFactor);\n        p2.position.addTo(normVec);\n      } else {\n        const velocityVec = Vector.create(velocity, velocity);\n        p2.position.addTo(velocityVec);\n      }\n    }\n  }\n  isEnabled(particle) {\n    return particle.options.repulse?.enabled ?? false;\n  }\n  loadParticlesOptions(options, ...sources) {\n    if (!options.repulse) {\n      options.repulse = new ParticlesRepulse();\n    }\n    for (const source of sources) {\n      options.repulse.load(source?.repulse);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ParticlesInteractorBase","Vector","clamp","getDistances","getRangeValue","ParticlesRepulse","minDistance","identity","squareExp","minVelocity","Repulser","constructor","container","clear","init","interact","p1","repulse","repulseOpt1","options","distance","retina","pixelRatio","speed","factor","pos1","getPosition","query","particles","quadTree","queryCircle","p2","destroyed","pos2","dx","dy","velocity","repulseFactor","Math","pow","normVec","create","position","addTo","velocityVec","isEnabled","particle","enabled","loadParticlesOptions","sources","source","load","reset"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/interaction-particles-repulse/browser/Repulser.js"],"sourcesContent":["import { ParticlesInteractorBase, Vector, clamp, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nimport { ParticlesRepulse } from \"./Options/Classes/ParticlesRepulse.js\";\nconst minDistance = 0, identity = 1, squareExp = 2, minVelocity = 0;\nexport class Repulser extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (!p1.repulse) {\n            const repulseOpt1 = p1.options.repulse;\n            if (!repulseOpt1) {\n                return;\n            }\n            p1.repulse = {\n                distance: getRangeValue(repulseOpt1.distance) * container.retina.pixelRatio,\n                speed: getRangeValue(repulseOpt1.speed),\n                factor: getRangeValue(repulseOpt1.factor),\n            };\n        }\n        const pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, p1.repulse.distance);\n        for (const p2 of query) {\n            if (p1 === p2 || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy, distance } = getDistances(pos2, pos1), velocity = p1.repulse.speed * p1.repulse.factor;\n            if (distance > minDistance) {\n                const repulseFactor = clamp((identity - Math.pow(distance / p1.repulse.distance, squareExp)) * velocity, minVelocity, velocity), normVec = Vector.create((dx / distance) * repulseFactor, (dy / distance) * repulseFactor);\n                p2.position.addTo(normVec);\n            }\n            else {\n                const velocityVec = Vector.create(velocity, velocity);\n                p2.position.addTo(velocityVec);\n            }\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.repulse?.enabled ?? false;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new ParticlesRepulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}