{"ast":null,"code":"import { safeMatchMedia } from \"@tsparticles/engine\";\nconst defaultFactor = 1,\n  defaultReduce = 1,\n  disableReduce = 0,\n  identity = 1;\nexport class MotionInstance {\n  constructor(container, engine) {\n    this._handleMotionChange = mediaQuery => {\n      const container = this._container,\n        motion = container.actualOptions.motion;\n      if (!motion) {\n        return;\n      }\n      if (mediaQuery.matches) {\n        if (motion.disable) {\n          container.retina.reduceFactor = disableReduce;\n        } else {\n          container.retina.reduceFactor = motion.reduce.value ? identity / motion.reduce.factor : defaultFactor;\n        }\n      } else {\n        container.retina.reduceFactor = defaultReduce;\n      }\n    };\n    this._container = container;\n    this._engine = engine;\n  }\n  async init() {\n    const container = this._container,\n      options = container.actualOptions.motion;\n    if (!(options && (options.disable || options.reduce.value))) {\n      container.retina.reduceFactor = 1;\n      return;\n    }\n    const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n    if (!mediaQuery) {\n      container.retina.reduceFactor = defaultFactor;\n      return;\n    }\n    this._handleMotionChange(mediaQuery);\n    const handleChange = () => {\n      void (async () => {\n        this._handleMotionChange(mediaQuery);\n        try {\n          await container.refresh();\n        } catch {}\n      })();\n    };\n    if (mediaQuery.addEventListener !== undefined) {\n      mediaQuery.addEventListener(\"change\", handleChange);\n    } else if (mediaQuery.addListener !== undefined) {\n      mediaQuery.addListener(handleChange);\n    }\n    await Promise.resolve();\n  }\n}","map":{"version":3,"names":["safeMatchMedia","defaultFactor","defaultReduce","disableReduce","identity","MotionInstance","constructor","container","engine","_handleMotionChange","mediaQuery","_container","motion","actualOptions","matches","disable","retina","reduceFactor","reduce","value","factor","_engine","init","options","handleChange","refresh","addEventListener","undefined","addListener","Promise","resolve"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/plugin-motion/browser/MotionInstance.js"],"sourcesContent":["import { safeMatchMedia } from \"@tsparticles/engine\";\nconst defaultFactor = 1, defaultReduce = 1, disableReduce = 0, identity = 1;\nexport class MotionInstance {\n    constructor(container, engine) {\n        this._handleMotionChange = mediaQuery => {\n            const container = this._container, motion = container.actualOptions.motion;\n            if (!motion) {\n                return;\n            }\n            if (mediaQuery.matches) {\n                if (motion.disable) {\n                    container.retina.reduceFactor = disableReduce;\n                }\n                else {\n                    container.retina.reduceFactor = motion.reduce.value ? identity / motion.reduce.factor : defaultFactor;\n                }\n            }\n            else {\n                container.retina.reduceFactor = defaultReduce;\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions.motion;\n        if (!(options && (options.disable || options.reduce.value))) {\n            container.retina.reduceFactor = 1;\n            return;\n        }\n        const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n        if (!mediaQuery) {\n            container.retina.reduceFactor = defaultFactor;\n            return;\n        }\n        this._handleMotionChange(mediaQuery);\n        const handleChange = () => {\n            void (async () => {\n                this._handleMotionChange(mediaQuery);\n                try {\n                    await container.refresh();\n                }\n                catch {\n                }\n            })();\n        };\n        if (mediaQuery.addEventListener !== undefined) {\n            mediaQuery.addEventListener(\"change\", handleChange);\n        }\n        else if (mediaQuery.addListener !== undefined) {\n            mediaQuery.addListener(handleChange);\n        }\n        await Promise.resolve();\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,MAAMC,aAAa,GAAG,CAAC;EAAEC,aAAa,GAAG,CAAC;EAAEC,aAAa,GAAG,CAAC;EAAEC,QAAQ,GAAG,CAAC;AAC3E,OAAO,MAAMC,cAAc,CAAC;EACxBC,WAAWA,CAACC,SAAS,EAAEC,MAAM,EAAE;IAC3B,IAAI,CAACC,mBAAmB,GAAGC,UAAU,IAAI;MACrC,MAAMH,SAAS,GAAG,IAAI,CAACI,UAAU;QAAEC,MAAM,GAAGL,SAAS,CAACM,aAAa,CAACD,MAAM;MAC1E,IAAI,CAACA,MAAM,EAAE;QACT;MACJ;MACA,IAAIF,UAAU,CAACI,OAAO,EAAE;QACpB,IAAIF,MAAM,CAACG,OAAO,EAAE;UAChBR,SAAS,CAACS,MAAM,CAACC,YAAY,GAAGd,aAAa;QACjD,CAAC,MACI;UACDI,SAAS,CAACS,MAAM,CAACC,YAAY,GAAGL,MAAM,CAACM,MAAM,CAACC,KAAK,GAAGf,QAAQ,GAAGQ,MAAM,CAACM,MAAM,CAACE,MAAM,GAAGnB,aAAa;QACzG;MACJ,CAAC,MACI;QACDM,SAAS,CAACS,MAAM,CAACC,YAAY,GAAGf,aAAa;MACjD;IACJ,CAAC;IACD,IAAI,CAACS,UAAU,GAAGJ,SAAS;IAC3B,IAAI,CAACc,OAAO,GAAGb,MAAM;EACzB;EACA,MAAMc,IAAIA,CAAA,EAAG;IACT,MAAMf,SAAS,GAAG,IAAI,CAACI,UAAU;MAAEY,OAAO,GAAGhB,SAAS,CAACM,aAAa,CAACD,MAAM;IAC3E,IAAI,EAAEW,OAAO,KAAKA,OAAO,CAACR,OAAO,IAAIQ,OAAO,CAACL,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;MACzDZ,SAAS,CAACS,MAAM,CAACC,YAAY,GAAG,CAAC;MACjC;IACJ;IACA,MAAMP,UAAU,GAAGV,cAAc,CAAC,kCAAkC,CAAC;IACrE,IAAI,CAACU,UAAU,EAAE;MACbH,SAAS,CAACS,MAAM,CAACC,YAAY,GAAGhB,aAAa;MAC7C;IACJ;IACA,IAAI,CAACQ,mBAAmB,CAACC,UAAU,CAAC;IACpC,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACvB,KAAK,CAAC,YAAY;QACd,IAAI,CAACf,mBAAmB,CAACC,UAAU,CAAC;QACpC,IAAI;UACA,MAAMH,SAAS,CAACkB,OAAO,CAAC,CAAC;QAC7B,CAAC,CACD,MAAM,CACN;MACJ,CAAC,EAAE,CAAC;IACR,CAAC;IACD,IAAIf,UAAU,CAACgB,gBAAgB,KAAKC,SAAS,EAAE;MAC3CjB,UAAU,CAACgB,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACvD,CAAC,MACI,IAAId,UAAU,CAACkB,WAAW,KAAKD,SAAS,EAAE;MAC3CjB,UAAU,CAACkB,WAAW,CAACJ,YAAY,CAAC;IACxC;IACA,MAAMK,OAAO,CAACC,OAAO,CAAC,CAAC;EAC3B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}