{"ast":null,"code":"import { defaultAlpha, double, getRangeValue, half, none, originPoint } from \"@tsparticles/engine\";\nconst minTrailLength = 2,\n  trailLengthOffset = 1,\n  minWidth = -1,\n  defaultLength = 10;\nconst defaultTransform = {\n  a: 1,\n  b: 0,\n  c: 0,\n  d: 1\n};\nexport class TrailDrawer {\n  draw(data) {\n    const {\n        context,\n        radius,\n        particle,\n        transformData\n      } = data,\n      diameter = radius * double,\n      pxRatio = particle.container.retina.pixelRatio,\n      currentPos = particle.getPosition(),\n      trail = particle.trail;\n    if (!trail || !particle.trailLength) {\n      return;\n    }\n    const pathLength = particle.trailLength + radius;\n    trail.push({\n      color: context.fillStyle ?? context.strokeStyle,\n      position: {\n        x: currentPos.x,\n        y: currentPos.y\n      },\n      transformData: {\n        ...data.transformData\n      }\n    });\n    if (trail.length < minTrailLength) {\n      return;\n    }\n    while (trail.length > pathLength) {\n      trail.shift();\n    }\n    const trailLength = Math.min(trail.length, pathLength),\n      canvasSize = {\n        width: particle.container.canvas.size.width + diameter,\n        height: particle.container.canvas.size.height + diameter\n      };\n    let lastPos = trail[trailLength - trailLengthOffset].position;\n    for (let i = trailLength; i > none; i--) {\n      const step = trail[i - trailLengthOffset],\n        position = step.position,\n        stepTransformData = particle.trailTransform ? step.transformData ?? defaultTransform : defaultTransform;\n      context.setTransform(stepTransformData.a, stepTransformData.b, stepTransformData.c, stepTransformData.d, position.x, position.y);\n      context.beginPath();\n      context.moveTo(lastPos.x - position.x, lastPos.y - position.y);\n      const warp = {\n        x: (lastPos.x + canvasSize.width) % canvasSize.width,\n        y: (lastPos.y + canvasSize.height) % canvasSize.height\n      };\n      if (Math.abs(lastPos.x - position.x) > canvasSize.width * half || Math.abs(lastPos.y - position.y) > canvasSize.height * half) {\n        lastPos = position;\n        continue;\n      }\n      context.lineTo(Math.abs(lastPos.x - position.x) > canvasSize.width * half ? warp.x : originPoint.x, Math.abs(lastPos.y - position.y) > canvasSize.height * half ? warp.y : originPoint.y);\n      const width = Math.max(i / trailLength * diameter, pxRatio, particle.trailMinWidth ?? minWidth),\n        oldAlpha = context.globalAlpha;\n      context.globalAlpha = particle.trailFade ? i / trailLength : defaultAlpha;\n      context.lineWidth = particle.trailMaxWidth ? Math.min(width, particle.trailMaxWidth) : width;\n      context.strokeStyle = step.color;\n      context.stroke();\n      context.globalAlpha = oldAlpha;\n      lastPos = position;\n    }\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, currentPos.x, currentPos.y);\n  }\n  particleInit(container, particle) {\n    particle.trail = [];\n    const effectData = particle.effectData;\n    particle.trailFade = effectData?.fade ?? true;\n    particle.trailLength = getRangeValue(effectData?.length ?? defaultLength) * container.retina.pixelRatio;\n    particle.trailMaxWidth = effectData?.maxWidth ? getRangeValue(effectData.maxWidth) * container.retina.pixelRatio : undefined;\n    particle.trailMinWidth = effectData?.minWidth ? getRangeValue(effectData.minWidth) * container.retina.pixelRatio : undefined;\n    particle.trailTransform = effectData?.transform ?? false;\n  }\n}","map":{"version":3,"names":["defaultAlpha","double","getRangeValue","half","none","originPoint","minTrailLength","trailLengthOffset","minWidth","defaultLength","defaultTransform","a","b","c","d","TrailDrawer","draw","data","context","radius","particle","transformData","diameter","pxRatio","container","retina","pixelRatio","currentPos","getPosition","trail","trailLength","pathLength","push","color","fillStyle","strokeStyle","position","x","y","length","shift","Math","min","canvasSize","width","canvas","size","height","lastPos","i","step","stepTransformData","trailTransform","setTransform","beginPath","moveTo","warp","abs","lineTo","max","trailMinWidth","oldAlpha","globalAlpha","trailFade","lineWidth","trailMaxWidth","stroke","particleInit","effectData","fade","maxWidth","undefined","transform"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/effect-trail/browser/TrailDrawer.js"],"sourcesContent":["import { defaultAlpha, double, getRangeValue, half, none, originPoint, } from \"@tsparticles/engine\";\nconst minTrailLength = 2, trailLengthOffset = 1, minWidth = -1, defaultLength = 10;\nconst defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport class TrailDrawer {\n    draw(data) {\n        const { context, radius, particle, transformData } = data, diameter = radius * double, pxRatio = particle.container.retina.pixelRatio, currentPos = particle.getPosition(), trail = particle.trail;\n        if (!trail || !particle.trailLength) {\n            return;\n        }\n        const pathLength = particle.trailLength + radius;\n        trail.push({\n            color: context.fillStyle ?? context.strokeStyle,\n            position: {\n                x: currentPos.x,\n                y: currentPos.y,\n            },\n            transformData: { ...data.transformData },\n        });\n        if (trail.length < minTrailLength) {\n            return;\n        }\n        while (trail.length > pathLength) {\n            trail.shift();\n        }\n        const trailLength = Math.min(trail.length, pathLength), canvasSize = {\n            width: particle.container.canvas.size.width + diameter,\n            height: particle.container.canvas.size.height + diameter,\n        };\n        let lastPos = trail[trailLength - trailLengthOffset].position;\n        for (let i = trailLength; i > none; i--) {\n            const step = trail[i - trailLengthOffset], position = step.position, stepTransformData = particle.trailTransform\n                ? (step.transformData ?? defaultTransform)\n                : defaultTransform;\n            context.setTransform(stepTransformData.a, stepTransformData.b, stepTransformData.c, stepTransformData.d, position.x, position.y);\n            context.beginPath();\n            context.moveTo(lastPos.x - position.x, lastPos.y - position.y);\n            const warp = {\n                x: (lastPos.x + canvasSize.width) % canvasSize.width,\n                y: (lastPos.y + canvasSize.height) % canvasSize.height,\n            };\n            if (Math.abs(lastPos.x - position.x) > canvasSize.width * half ||\n                Math.abs(lastPos.y - position.y) > canvasSize.height * half) {\n                lastPos = position;\n                continue;\n            }\n            context.lineTo(Math.abs(lastPos.x - position.x) > canvasSize.width * half ? warp.x : originPoint.x, Math.abs(lastPos.y - position.y) > canvasSize.height * half ? warp.y : originPoint.y);\n            const width = Math.max((i / trailLength) * diameter, pxRatio, particle.trailMinWidth ?? minWidth), oldAlpha = context.globalAlpha;\n            context.globalAlpha = particle.trailFade ? i / trailLength : defaultAlpha;\n            context.lineWidth = particle.trailMaxWidth ? Math.min(width, particle.trailMaxWidth) : width;\n            context.strokeStyle = step.color;\n            context.stroke();\n            context.globalAlpha = oldAlpha;\n            lastPos = position;\n        }\n        context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, currentPos.x, currentPos.y);\n    }\n    particleInit(container, particle) {\n        particle.trail = [];\n        const effectData = particle.effectData;\n        particle.trailFade = effectData?.fade ?? true;\n        particle.trailLength = getRangeValue(effectData?.length ?? defaultLength) * container.retina.pixelRatio;\n        particle.trailMaxWidth = effectData?.maxWidth\n            ? getRangeValue(effectData.maxWidth) * container.retina.pixelRatio\n            : undefined;\n        particle.trailMinWidth = effectData?.minWidth\n            ? getRangeValue(effectData.minWidth) * container.retina.pixelRatio\n            : undefined;\n        particle.trailTransform = effectData?.transform ?? false;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}