{"ast":null,"code":"import { tsParticles } from \"@tsparticles/engine\";\nconst linksMinDistance = 120,\n  moveMinSpeed = 0.5,\n  particlesMinCount = 100,\n  sizeMinValue = 3;\nexport class Particles {\n  static init(options) {\n    const particles = new Particles(),\n      selector = options.selector;\n    if (!selector) {\n      throw new Error(\"No selector provided\");\n    }\n    const el = document.querySelector(selector);\n    if (!el) {\n      throw new Error(\"No element found for selector\");\n    }\n    void tsParticles.load({\n      element: el,\n      id: selector.replace(\".\", \"\").replace(\"!\", \"\"),\n      options: {\n        fullScreen: {\n          enable: false\n        },\n        particles: {\n          color: {\n            value: options.color ?? \"!000000\"\n          },\n          links: {\n            color: \"random\",\n            distance: options.minDistance ?? linksMinDistance,\n            enable: options.connectParticles ?? false\n          },\n          move: {\n            enable: true,\n            speed: options.speed ?? moveMinSpeed\n          },\n          number: {\n            value: options.maxParticles ?? particlesMinCount\n          },\n          size: {\n            value: {\n              min: 1,\n              max: options.sizeVariations ?? sizeMinValue\n            }\n          }\n        },\n        responsive: options.responsive?.map(responsive => ({\n          maxWidth: responsive.breakpoint,\n          options: {\n            particles: {\n              color: {\n                value: responsive.options?.color\n              },\n              links: {\n                distance: responsive.options?.minDistance,\n                enable: responsive.options?.connectParticles\n              },\n              number: {\n                value: options.maxParticles\n              },\n              move: {\n                enable: true,\n                speed: responsive.options?.speed\n              },\n              size: {\n                value: responsive.options?.sizeVariations\n              }\n            }\n          }\n        }))\n      }\n    }).then(container => {\n      particles._container = container;\n    });\n    return particles;\n  }\n  destroy() {\n    const container = this._container;\n    container?.destroy();\n  }\n  pauseAnimation() {\n    const container = this._container;\n    container?.pause();\n  }\n  resumeAnimation() {\n    const container = this._container;\n    container?.play();\n  }\n}","map":{"version":3,"names":["tsParticles","linksMinDistance","moveMinSpeed","particlesMinCount","sizeMinValue","Particles","init","options","particles","selector","Error","el","document","querySelector","load","element","id","replace","fullScreen","enable","color","value","links","distance","minDistance","connectParticles","move","speed","number","maxParticles","size","min","max","sizeVariations","responsive","map","maxWidth","breakpoint","then","container","_container","destroy","pauseAnimation","pause","resumeAnimation","play"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/pjs/browser/marcbruederlin/Particles.js"],"sourcesContent":["import { tsParticles } from \"@tsparticles/engine\";\nconst linksMinDistance = 120, moveMinSpeed = 0.5, particlesMinCount = 100, sizeMinValue = 3;\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        void tsParticles\n            .load({\n            element: el,\n            id: selector.replace(\".\", \"\").replace(\"!\", \"\"),\n            options: {\n                fullScreen: {\n                    enable: false,\n                },\n                particles: {\n                    color: {\n                        value: options.color ?? \"!000000\",\n                    },\n                    links: {\n                        color: \"random\",\n                        distance: options.minDistance ?? linksMinDistance,\n                        enable: options.connectParticles ?? false,\n                    },\n                    move: {\n                        enable: true,\n                        speed: options.speed ?? moveMinSpeed,\n                    },\n                    number: {\n                        value: options.maxParticles ?? particlesMinCount,\n                    },\n                    size: {\n                        value: { min: 1, max: options.sizeVariations ?? sizeMinValue },\n                    },\n                },\n                responsive: options.responsive?.map(responsive => ({\n                    maxWidth: responsive.breakpoint,\n                    options: {\n                        particles: {\n                            color: {\n                                value: responsive.options?.color,\n                            },\n                            links: {\n                                distance: responsive.options?.minDistance,\n                                enable: responsive.options?.connectParticles,\n                            },\n                            number: {\n                                value: options.maxParticles,\n                            },\n                            move: {\n                                enable: true,\n                                speed: responsive.options?.speed,\n                            },\n                            size: {\n                                value: responsive.options?.sizeVariations,\n                            },\n                        },\n                    },\n                })),\n            },\n        })\n            .then(container => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container?.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container?.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container?.play();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}