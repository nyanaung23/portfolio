{"ast":null,"code":"import { ExternalInteractorBase, deepExtend, getRangeValue, itemFromArray, itemFromSingleOrMultiple } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\",\n  minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      if (mode !== pushMode) {\n        return;\n      }\n      const container = this.container,\n        options = container.actualOptions,\n        pushOptions = options.interactivity.modes.push;\n      if (!pushOptions) {\n        return;\n      }\n      const quantity = getRangeValue(pushOptions.quantity);\n      if (quantity <= minQuantity) {\n        return;\n      }\n      const group = itemFromArray([undefined, ...pushOptions.groups]),\n        groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined,\n        particlesOptions = itemFromSingleOrMultiple(pushOptions.particles),\n        overrideOptions = deepExtend(groupOptions, particlesOptions);\n      void container.particles.push(quantity, container.interactivity.mouse, overrideOptions, group);\n    };\n  }\n  clear() {}\n  init() {}\n  interact() {}\n  isEnabled() {\n    return true;\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.push) {\n      options.push = new Push();\n    }\n    for (const source of sources) {\n      options.push.load(source?.push);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","deepExtend","getRangeValue","itemFromArray","itemFromSingleOrMultiple","Push","pushMode","minQuantity","Pusher","constructor","container","handleClickMode","mode","options","actualOptions","pushOptions","interactivity","modes","push","quantity","group","undefined","groups","groupOptions","particles","particlesOptions","overrideOptions","mouse","clear","init","interact","isEnabled","loadModeOptions","sources","source","load","reset"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/interaction-external-push/browser/Pusher.js"],"sourcesContent":["import { ExternalInteractorBase, deepExtend, getRangeValue, itemFromArray, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined, particlesOptions = itemFromSingleOrMultiple(pushOptions.particles), overrideOptions = deepExtend(groupOptions, particlesOptions);\n            void container.particles.push(quantity, container.interactivity.mouse, overrideOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAEC,wBAAwB,QAAS,qBAAqB;AACjI,SAASC,IAAI,QAAQ,2BAA2B;AAChD,MAAMC,QAAQ,GAAG,MAAM;EAAEC,WAAW,GAAG,CAAC;AACxC,OAAO,MAAMC,MAAM,SAASR,sBAAsB,CAAC;EAC/CS,WAAWA,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,IAAIA,IAAI,KAAKN,QAAQ,EAAE;QACnB;MACJ;MACA,MAAMI,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEG,OAAO,GAAGH,SAAS,CAACI,aAAa;QAAEC,WAAW,GAAGF,OAAO,CAACG,aAAa,CAACC,KAAK,CAACC,IAAI;MACnH,IAAI,CAACH,WAAW,EAAE;QACd;MACJ;MACA,MAAMI,QAAQ,GAAGjB,aAAa,CAACa,WAAW,CAACI,QAAQ,CAAC;MACpD,IAAIA,QAAQ,IAAIZ,WAAW,EAAE;QACzB;MACJ;MACA,MAAMa,KAAK,GAAGjB,aAAa,CAAC,CAACkB,SAAS,EAAE,GAAGN,WAAW,CAACO,MAAM,CAAC,CAAC;QAAEC,YAAY,GAAGH,KAAK,KAAKC,SAAS,GAAGX,SAAS,CAACI,aAAa,CAACU,SAAS,CAACF,MAAM,CAACF,KAAK,CAAC,GAAGC,SAAS;QAAEI,gBAAgB,GAAGrB,wBAAwB,CAACW,WAAW,CAACS,SAAS,CAAC;QAAEE,eAAe,GAAGzB,UAAU,CAACsB,YAAY,EAAEE,gBAAgB,CAAC;MACnS,KAAKf,SAAS,CAACc,SAAS,CAACN,IAAI,CAACC,QAAQ,EAAET,SAAS,CAACM,aAAa,CAACW,KAAK,EAAED,eAAe,EAAEN,KAAK,CAAC;IAClG,CAAC;EACL;EACAQ,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG,CACP;EACAC,QAAQA,CAAA,EAAG,CACX;EACAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI;EACf;EACAC,eAAeA,CAACnB,OAAO,EAAE,GAAGoB,OAAO,EAAE;IACjC,IAAI,CAACpB,OAAO,CAACK,IAAI,EAAE;MACfL,OAAO,CAACK,IAAI,GAAG,IAAIb,IAAI,CAAC,CAAC;IAC7B;IACA,KAAK,MAAM6B,MAAM,IAAID,OAAO,EAAE;MAC1BpB,OAAO,CAACK,IAAI,CAACiB,IAAI,CAACD,MAAM,EAAEhB,IAAI,CAAC;IACnC;EACJ;EACAkB,KAAKA,CAAA,EAAG,CACR;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}