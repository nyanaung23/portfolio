{"ast":null,"code":"import { getStyleFromRgb } from \"@tsparticles/engine\";\nconst gradientPos = {\n    max: 1,\n    min: 0\n  },\n  half = 0.5,\n  double = 2,\n  halfPI = Math.PI * half,\n  doublePI = Math.PI * double,\n  quarter = 0.25,\n  quarterPI = Math.PI * quarter,\n  arcStart = 0;\nexport const lightMode = \"light\";\nexport function drawLight(container, context, mousePos) {\n  const lightOptions = container.actualOptions.interactivity.modes.light?.area;\n  if (!lightOptions) {\n    return;\n  }\n  context.beginPath();\n  context.arc(mousePos.x, mousePos.y, lightOptions.radius, arcStart, doublePI);\n  const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, arcStart, mousePos.x, mousePos.y, lightOptions.radius);\n  const gradientRgb = container.canvas.mouseLight;\n  if (!gradientRgb?.start || !gradientRgb.stop) {\n    return;\n  }\n  gradientAmbientLight.addColorStop(gradientPos.min, getStyleFromRgb(gradientRgb.start));\n  gradientAmbientLight.addColorStop(gradientPos.max, getStyleFromRgb(gradientRgb.stop));\n  context.fillStyle = gradientAmbientLight;\n  context.fill();\n}\nexport function drawParticleShadow(container, context, particle, mousePos) {\n  const pos = particle.getPosition(),\n    shadowOptions = container.actualOptions.interactivity.modes.light?.shadow;\n  if (!shadowOptions) {\n    return;\n  }\n  const shadowRgb = particle.lightShadow;\n  if (!shadowRgb) {\n    return;\n  }\n  const radius = particle.getRadius(),\n    sides = particle.sides,\n    full = doublePI / sides,\n    angle = -particle.rotation + quarterPI,\n    factor = 1,\n    dots = [];\n  for (let i = 0; i < sides; i++) {\n    dots.push({\n      x: pos.x + radius * Math.sin(angle + full * i) * factor,\n      y: pos.y + radius * Math.cos(angle + full * i) * factor\n    });\n  }\n  const points = [],\n    shadowLength = shadowOptions.length;\n  for (const dot of dots) {\n    const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x),\n      end = {\n        x: dot.x + shadowLength * Math.sin(-dotAngle - halfPI),\n        y: dot.y + shadowLength * Math.cos(-dotAngle - halfPI)\n      };\n    points.push({\n      end: end,\n      start: dot\n    });\n  }\n  const shadowColor = getStyleFromRgb(shadowRgb),\n    lastOffset = 1,\n    firstPos = 0,\n    last = points.length - lastOffset;\n  for (let i = last, n = 0; i >= firstPos; n = i--) {\n    context.beginPath();\n    context.moveTo(points[i].start.x, points[i].start.y);\n    context.lineTo(points[n].start.x, points[n].start.y);\n    context.lineTo(points[n].end.x, points[n].end.y);\n    context.lineTo(points[i].end.x, points[i].end.y);\n    context.fillStyle = shadowColor;\n    context.fill();\n  }\n}","map":{"version":3,"names":["getStyleFromRgb","gradientPos","max","min","half","double","halfPI","Math","PI","doublePI","quarter","quarterPI","arcStart","lightMode","drawLight","container","context","mousePos","lightOptions","actualOptions","interactivity","modes","light","area","beginPath","arc","x","y","radius","gradientAmbientLight","createRadialGradient","gradientRgb","canvas","mouseLight","start","stop","addColorStop","fillStyle","fill","drawParticleShadow","particle","pos","getPosition","shadowOptions","shadow","shadowRgb","lightShadow","getRadius","sides","full","angle","rotation","factor","dots","i","push","sin","cos","points","shadowLength","length","dot","dotAngle","atan2","end","shadowColor","lastOffset","firstPos","last","n","moveTo","lineTo"],"sources":["/Users/nyanaung/repos/portfolio/node_modules/@tsparticles/interaction-light/browser/Utils.js"],"sourcesContent":["import { getStyleFromRgb } from \"@tsparticles/engine\";\nconst gradientPos = {\n    max: 1,\n    min: 0,\n}, half = 0.5, double = 2, halfPI = Math.PI * half, doublePI = Math.PI * double, quarter = 0.25, quarterPI = Math.PI * quarter, arcStart = 0;\nexport const lightMode = \"light\";\nexport function drawLight(container, context, mousePos) {\n    const lightOptions = container.actualOptions.interactivity.modes.light?.area;\n    if (!lightOptions) {\n        return;\n    }\n    context.beginPath();\n    context.arc(mousePos.x, mousePos.y, lightOptions.radius, arcStart, doublePI);\n    const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, arcStart, mousePos.x, mousePos.y, lightOptions.radius);\n    const gradientRgb = container.canvas.mouseLight;\n    if (!gradientRgb?.start || !gradientRgb.stop) {\n        return;\n    }\n    gradientAmbientLight.addColorStop(gradientPos.min, getStyleFromRgb(gradientRgb.start));\n    gradientAmbientLight.addColorStop(gradientPos.max, getStyleFromRgb(gradientRgb.stop));\n    context.fillStyle = gradientAmbientLight;\n    context.fill();\n}\nexport function drawParticleShadow(container, context, particle, mousePos) {\n    const pos = particle.getPosition(), shadowOptions = container.actualOptions.interactivity.modes.light?.shadow;\n    if (!shadowOptions) {\n        return;\n    }\n    const shadowRgb = particle.lightShadow;\n    if (!shadowRgb) {\n        return;\n    }\n    const radius = particle.getRadius(), sides = particle.sides, full = doublePI / sides, angle = -particle.rotation + quarterPI, factor = 1, dots = [];\n    for (let i = 0; i < sides; i++) {\n        dots.push({\n            x: pos.x + radius * Math.sin(angle + full * i) * factor,\n            y: pos.y + radius * Math.cos(angle + full * i) * factor,\n        });\n    }\n    const points = [], shadowLength = shadowOptions.length;\n    for (const dot of dots) {\n        const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x), end = {\n            x: dot.x + shadowLength * Math.sin(-dotAngle - halfPI),\n            y: dot.y + shadowLength * Math.cos(-dotAngle - halfPI),\n        };\n        points.push({\n            end: end,\n            start: dot,\n        });\n    }\n    const shadowColor = getStyleFromRgb(shadowRgb), lastOffset = 1, firstPos = 0, last = points.length - lastOffset;\n    for (let i = last, n = 0; i >= firstPos; n = i--) {\n        context.beginPath();\n        context.moveTo(points[i].start.x, points[i].start.y);\n        context.lineTo(points[n].start.x, points[n].start.y);\n        context.lineTo(points[n].end.x, points[n].end.y);\n        context.lineTo(points[i].end.x, points[i].end.y);\n        context.fillStyle = shadowColor;\n        context.fill();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}